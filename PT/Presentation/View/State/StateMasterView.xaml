<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:Presentation.View"
    xmlns:view="clr-namespace:Presentation.View"
    xmlns:viewmodels="clr-namespace:Presentation.ViewModel" x:Class="Presentation.View.StateMasterView"
    mc:Ignorable="d" 
    d:DesignHeight="500" d:DesignWidth="800">

   
        <!-- Greenish background -->

        <UserControl 
            d:DesignHeight="480" d:DesignWidth="800" Margin="0,0,0,-30">

            <UserControl.DataContext>
                <ObjectDataProvider ObjectType="viewmodels:StateMasterViewModel">
                    <ObjectDataProvider.ConstructorParameters>
                        <x:Null/>
                        <x:Null/>
                    </ObjectDataProvider.ConstructorParameters>
                </ObjectDataProvider>
            </UserControl.DataContext>

        <Grid Background="LightGreen" Margin="0,0,0,0">
                <view:StateDetailView
                    Margin="355,92,217,48"
                    DataContext="{Binding SelectedDetailViewModel}" Height="340" Width="220"
                />
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0">
                    <Button Content="Catalogs" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToCatalogMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="States" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToStateMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="Events" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToEventMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="Products" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToProductMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="Customers" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToCustomerMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="Employees" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToEmployeeMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                </StackPanel>

                <ListView Margin="10,127,450,40" 
                          ItemsSource="{Binding States, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedDetailViewModel}" d:ItemsSource="{d:SampleData ItemCount=5}" Height="340">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="StateId" Width="110" DisplayMemberBinding="{Binding StateId}"/>
                            <GridViewColumn Header="ProductId" Width="110" DisplayMemberBinding="{Binding ProductId}" />
                            <GridViewColumn Header="Quantity" Width="110" DisplayMemberBinding="{Binding Quantity}" />
                        </GridView>
                    </ListView.View>
                </ListView>

                <Button Content="Delete" Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
                    HorizontalAlignment="Left" Margin="420,411,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.227,0.242" Height="26" Width="90"
                    Command="{Binding RemoveState}"/>

                <Button Content="Add" Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
                    HorizontalAlignment="Left" Margin="642,255,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.227,0.242" Height="26" Width="90"
                    Command="{Binding CreateState}"/>
                <StackPanel Margin="594,142,0,0"
                            VerticalAlignment="Top"
                            Background="White" Height="92" HorizontalAlignment="Left" Width="186">
                    <Label Content="Product id:" FontSize="10" Width="58"/>
                    <TextBox Height="20" Width="120"
                            Text="{Binding ProductId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                            TextWrapping="Wrap"
                            BorderBrush="Gray">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="placeholder"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>

                    <Label Content="Quantity:" FontSize="10" Width="54"/>
                    <TextBox Height="20" Width="120"
                            Text="{Binding Quantity, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                            TextWrapping="Wrap"
                            BorderBrush="Gray">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="placeholder"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>

                </StackPanel>


            </Grid>
        </UserControl>
</UserControl>