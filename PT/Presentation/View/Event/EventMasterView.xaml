<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:Presentation.View"
    xmlns:ViewModel="clr-namespace:Presentation.ViewModel" x:Class="Presentation.View.EventMasterView"
    mc:Ignorable="d" 
    d:DesignHeight="500" d:DesignWidth="800">

    <Grid>

        <UserControl d:DesignWidth="800" Margin="0,0,0,-30" Grid.RowSpan="2">

            <UserControl.DataContext>
                <ObjectDataProvider ObjectType="ViewModel:EventMasterViewModel">
                    <ObjectDataProvider.ConstructorParameters>
                        <x:Null/>
                        <x:Null/>
                    </ObjectDataProvider.ConstructorParameters>
                </ObjectDataProvider>
            </UserControl.DataContext>

            <Grid Background="LightGreen" Margin="0,0,0,0">
                <local:EventDetailView
                    Margin="355,92,217,48"
                    DataContext="{Binding SelectedDetailViewModel}" Height="340" Width="220"
                        />
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0">
                    <Button Content="Catalogs" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToCatalogMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="States" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToStateMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="Events" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToEventMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="Products" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToProductMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="Customers" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToCustomerMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                    <Button Content="Employees" Width="120" Height="50" Margin="5"
            Background="ForestGreen" Foreground="White" BorderBrush="Yellow"
            Command="{Binding SwitchToEmployeeMasterPage}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                </StackPanel>

                <ListView Margin="10,127,450,40" 
                    ItemsSource="{Binding Events, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding SelectedDetailViewModel}" d:ItemsSource="{d:SampleData ItemCount=5}" Height="340"
                    >
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="EventId" Width="110" DisplayMemberBinding="{Binding EventId}"/>
                            <GridViewColumn Header="StateId" Width="110" DisplayMemberBinding="{Binding StateId}" />
                            <GridViewColumn Header="EmployeeId" Width="110" DisplayMemberBinding="{Binding EmployeeId}" />
                            <GridViewColumn Header="CustomerId" Width="110" DisplayMemberBinding="{Binding CustomerId}"/>
                            <GridViewColumn Header="ProductId" Width="110" DisplayMemberBinding="{Binding ProductId}" />

                        </GridView>
                    </ListView.View>
                </ListView>

                <Button Content="Delete" Background="ForestGreen" Foreground="White" BorderBrush="Yellow" HorizontalAlignment="Left" Margin="420,430,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.227,0.242" Height="26" Width="90" Command="{Binding RemoveEvent}"/>
                <Button Content="Add" Background="ForestGreen" Foreground="White" BorderBrush="Yellow" HorizontalAlignment="Left" Margin="640,430,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.227,0.242" Height="26" Width="90" Command="{Binding CreateEvent}"/>


                <StackPanel Margin="594,142,0,0" VerticalAlignment="Top" Background="White" Height="280" HorizontalAlignment="Left" Width="186">
                    <Label Content="Event id:" HorizontalAlignment="Center" Foreground="DarkGreen"/>
                    <TextBox Height="20" Width="120"
                         Text="{Binding EventId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="Wrap"
                         BorderBrush="Gray" IsReadOnly="True">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="placeholder"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>

                    <Label Content="State id:" HorizontalAlignment="Center" Foreground="DarkGreen"/>
                    <TextBox Height="20" Width="120"
                         Text="{Binding StateId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="Wrap"
                         BorderBrush="Gray">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="placeholder"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>

                    <Label Content="Employee id:" HorizontalAlignment="Center" Foreground="DarkGreen"/>
                    <TextBox Height="20" Width="120"
                         Text="{Binding EmployeeId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="Wrap"
                         BorderBrush="Gray">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="placeholder"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>

                    <Label Content="Customer id:" Width="80" Foreground="DarkGreen"/>
                    <TextBox Height="20" Width="120"
                Text="{Binding CustomerId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                TextWrapping="Wrap"
                 BorderBrush="Gray">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="placeholder"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>

                    <Label Content="Product id:" Width="80" Foreground="DarkGreen"/>
                    <TextBox Height="20" Width="120"
Text="{Binding ProductId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
TextWrapping="Wrap"
 BorderBrush="Gray">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="placeholder"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>

                    <Label Content="Event date:" Width="70" Foreground="DarkGreen"/>
                    <TextBox Height="20" Width="120"
                    Text="{Binding EventDate, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, StringFormat={}{0:MM/dd/yyyy}}"
                    TextWrapping="Wrap"
                    BorderBrush="Gray" IsReadOnly="True">
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <StackPanel>
                                    <AdornedElementPlaceholder x:Name="placeholder"/>
                                    <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </StackPanel>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                </StackPanel>
            </Grid>
        </UserControl>
    </Grid>
</UserControl>
